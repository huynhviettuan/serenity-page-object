# Define the default driver
webdriver.autodownload = true
webdriver.driver = chrome

# Settings for grid remote
#webdriver.driver = remote
#webdriver.remote.url = "http://localhost:4444/wd/hub"
#webdriver.remote.driver = chrome
#headless.mode = true

# Appears at the top of the reports
serenity.project.name = Serenity Page Object

# Root package for any JUnit acceptance tests
serenity.test.root=serenity.features

# options for chrome
chrome.switches=--homepage=about:blank,--no-first-run,--no-sandbox,--disable-dev-shm-usage
#chrome.capabilities.acceptSslCerts = true
#chrome.capabilities.handlesAlerts = true

# options for firefox

#gecko.firefox.options = {"args": ["-private", "-width=500", "--height=500"]}

#For more detail about serenity settings and browser capabilities
#https://serenity-bdd.github.io/theserenitybook/latest/serenity-system-properties.html
#https://serenity-bdd.github.io/theserenitybook/latest/web-testing-in-serenity.html

# Customise your riequirements hierarchy
#serenity.requirement.types=feature, story

# How long does Serenity wait for elements that are not present on the screen to load
#webdriver.timeouts.implicitlywait = 5000
#serenity.take.screenshots=AFTER_EACH_STEP

# Run the tests without calling webdriver - useful to check your JUnit wiring
#serenity.dry.run=true

# Customise browser size
#serenity.browser.height = 1200
#serenity.browser.width = 1200
serenity.browser.maximized = true

# Appium define -  Using appium.browserName=chrome when testing browser on mobile
#webdriver.driver= appium
#appium.hub = http://0.0.0.0:4723/wd/hub
#appium.platform=ANDROID
#appium.platformName=ANDROID
#appium.driver=Android
#appium.deviceName="emulator-5554"
#appium.automationName=UIAutomator2
#appium.app=${user.dir}\\Contacts.apk